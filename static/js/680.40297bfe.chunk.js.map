{"version":3,"file":"static/js/680.40297bfe.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","services/getMovieInfo.js","pages/MovieDetails/MovieDetails.Styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ children }) => {\n  return (\n    <div>\n      <h3>{children}</h3>\n    </div>\n  );\n};\n\nError.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Error;\n","import axios from 'axios';\n\nexport default class getMovieInfo {\n  options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMWQ2MWE4YjQ2NmU1YmQxMTMyMTgyMzhjNGY0ZjlmMyIsInN1YiI6IjY0YTI2YTQzODI4OWEwMDBjYWYwYTVlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nhvEKG7EoG9x1nhRPq5CaXnidc__HxCqBk3ol-ubvBY',\n    },\n  };\n\n  async getMovieDetails(id) {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n        this.options\n      );\n      const results = response.data;\n      return { results };\n    } catch (error) {\n      throw new Error(`No film info`);\n    }\n  }\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: 450px;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const MovieScore = styled.p`\n  font-size: 16px;\n  color: #666666;\n  margin-bottom: 10px;\n`;\n\nexport const MovieOverview = styled.h3`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const MovieDescription = styled.p`\n  font-size: 16px;\n  color: #333333;\n  margin-bottom: 20px;\n`;\n\nexport const AdditionalInfoContainer = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  border-bottom: 1px solid grey;\n`;\n\nexport const AdditionalInfoTitle = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  padding: 0;\n  gap: 20px;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  color: grey;\n  display: block;\n  text-decoration: none;\n  padding: 2px 20px;\n  border: 2px solid grey;\n  border-radius: 10px;\n  width: 10%;\n  &:hover {\n    color: white;\n    background-color: grey;\n  }\n`;\n\nexport const PlaceholderImage = styled.img`\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\nexport const BackButton = styled(Link)`\n  display: inline-block;\n  background-color: #ccc;\n  color: #fff;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  position: relative;\n  transition: background-color 0.3s;\n  margin-bottom: 5px;\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 8px;\n    transform: translateY(-50%);\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n    border-right: 6px solid #fff;\n    transition: border-right-color 0.3s;\n  }\n\n  &:hover {\n    background-color: #999;\n\n    ::before {\n      border-right-color: #999;\n    }\n  }\n\n  &:focus,\n  &:active {\n    background-color: #888;\n\n    ::before {\n      border-right-color: #888;\n    }\n  }\n`;\n","import React, { useEffect, useState, Suspense } from 'react';\nimport getMovieInfo from 'services/getMovieInfo';\nimport { Outlet } from 'react-router-dom';\nimport { useParams, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport {\n  MovieDescription,\n  MovieDetailsContainer,\n  MovieImage,\n  MovieTitle,\n  BackButton,\n  PlaceholderImage,\n  MovieScore,\n  MovieOverview,\n  AdditionalInfoContainer,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoLink,\n  MovieContent,\n} from './MovieDetails.Styled';\n\nconst MovieDetails = () => {\n  const apiService = new getMovieInfo();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isError, setIsError] = useState(null);\n  const [showButton, setShowButton] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const prevState = location.state;\n  const prevPageLocation = prevState?.from;\n\n  async function fetchDetails() {\n    setShowButton(false);\n    setIsError(false);\n    try {\n      const response = await apiService.getMovieDetails(movieId);\n      setMovieInfo(response.results);\n    } catch (error) {\n      setIsError(error);\n    } finally {\n      setShowButton(true);\n    }\n  }\n\n  useEffect(() => {\n    if (!movieInfo) {\n      fetchDetails();\n    }\n  });\n\n  if (isError) {\n    return <Error>We don't have details about this movie</Error>;\n  }\n\n  return (\n    <MovieDetailsContainer>\n      {showButton && <BackButton to={prevPageLocation}>Go Back</BackButton>}\n\n      {movieInfo && (\n        <MovieContent>\n          {movieInfo.poster_path ? (\n            <MovieImage\n              src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`}\n              alt={movieInfo.title ? movieInfo.title : movieInfo.name}\n            />\n          ) : (\n            <PlaceholderImage\n              src=\"https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png\"\n              alt={movieInfo.name}\n            />\n          )}\n          <div>\n            <MovieTitle>{movieInfo.title}</MovieTitle>\n            <MovieScore>\n              User score: {Math.round(movieInfo.vote_average * 10)} %\n            </MovieScore>\n            <MovieOverview>Overview</MovieOverview>\n            <MovieDescription>{movieInfo.overview}</MovieDescription>\n            {movieInfo.genres && (\n              <>\n                <MovieOverview>Genres</MovieOverview>\n                <MovieDescription>\n                  {movieInfo.genres.map(genre => genre.name).join(', ')}\n                </MovieDescription>\n              </>\n            )}\n          </div>\n        </MovieContent>\n      )}\n\n      {movieInfo && (\n        <AdditionalInfoContainer>\n          <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n          <AdditionalInfoList>\n            <li>\n              <AdditionalInfoLink\n                to={`/movies/${movieId}/cast`}\n                state={{ from: prevPageLocation }}\n              >\n                Cast\n              </AdditionalInfoLink>\n            </li>\n            <li>\n              <AdditionalInfoLink\n                to={`/movies/${movieId}/reviews`}\n                state={{ from: prevPageLocation }}\n              >\n                Reviews\n              </AdditionalInfoLink>\n            </li>\n          </AdditionalInfoList>\n        </AdditionalInfoContainer>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["children","getMovieInfo","options","method","headers","accept","Authorization","id","axios","this","response","results","data","Error","MovieDetailsContainer","styled","MovieImage","MovieContent","MovieTitle","MovieScore","MovieOverview","MovieDescription","AdditionalInfoContainer","AdditionalInfoTitle","AdditionalInfoList","AdditionalInfoLink","Link","PlaceholderImage","BackButton","apiService","useState","movieInfo","setMovieInfo","isError","setIsError","showButton","setShowButton","movieId","useParams","prevState","useLocation","state","prevPageLocation","from","getMovieDetails","useEffect","fetchDetails","to","poster_path","src","alt","title","name","Math","round","vote_average","overview","genres","map","genre","join","Suspense","fallback","Loader"],"sourceRoot":""}