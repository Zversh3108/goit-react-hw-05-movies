{"version":3,"file":"static/js/535.2c543bf9.chunk.js","mappings":"uKAeA,UAZc,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACf,OACE,0BACE,wBAAKA,KAGV,C,iKCPoBC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KACnBC,QAAU,CACRC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8NALI,CASV,OATU,qEASV,WAAiBC,GAAjB,kGAE2BC,EAAAA,EAAAA,IAAA,8CACkBD,EADlB,kCAErBE,KAAKP,SAJX,cAEUQ,EAFV,OAMUC,EAAUD,EAASE,KAN7B,kBAOW,CAAED,QAAAA,IAPb,sCASU,IAAIE,MAAJ,eATV,4GATU,MASV,EAVmBZ,G,uCCDRa,EAAmBC,EAAAA,EAAAA,IAAH,6CAIhBC,EAAaD,EAAAA,EAAAA,GAAH,4DAKVE,EAAaF,EAAAA,EAAAA,GAAH,oHAOVG,EAAeH,EAAAA,EAAAA,GAAH,yFAMZI,EAAgBJ,EAAAA,EAAAA,EAAH,+D,SC2B1B,EAvCgB,SAAAK,GACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAaC,EAAAA,EAAAA,UAAQ,kBAAM,IAAIvB,CAAV,GAA2B,IACtD,GAA8BwB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAeC,EAAAA,EAAAA,cAAW,iBAAC,2FAC/BF,GAAS,GADsB,kBAGNN,EAAWS,WAAWX,GAHhB,OAGvBX,EAHuB,OAI7BiB,EAAWjB,EAASC,QAAQA,SAJC,gDAM7BkB,EAAS,EAAD,IANqB,yDAQ9B,CAACN,EAAYF,IAQhB,OANAY,EAAAA,EAAAA,YAAU,WACHP,EAAQQ,QACXJ,GAEH,GAAE,CAACA,EAAcJ,EAAQQ,UAGxB,SAACpB,EAAD,UACGY,EAAQQ,OAAS,IAAMN,GACtB,SAACZ,EAAD,UACGU,EAAQS,KAAI,SAAAC,GAAM,OACjB,UAACnB,EAAD,YACE,SAACC,EAAD,UAAekB,EAAOC,UACtB,SAAClB,EAAD,UAAgBiB,EAAOE,YAFRF,EAAO7B,GADP,OAQrB,SAAC,UAAD,UAAO,8CAId,C","sources":["components/Error/Error.jsx","services/getReviews.js","pages/Reviews/Reviews.Styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ children }) => {\n  return (\n    <div>\n      <h3>{children}</h3>\n    </div>\n  );\n};\n\nError.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Error;\n","import axios from 'axios';\n\nexport default class getReviewsAPI {\n  options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMWQ2MWE4YjQ2NmU1YmQxMTMyMTgyMzhjNGY0ZjlmMyIsInN1YiI6IjY0YTI2YTQzODI4OWEwMDBjYWYwYTVlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nhvEKG7EoG9x1nhRPq5CaXnidc__HxCqBk3ol-ubvBY',\n    },\n  };\n\n  async getReviews(id) {\n    try {\n      const response = await axios.get(\n        ` https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n        this.options\n      );\n      const results = response.data;\n      return { results };\n    } catch (error) {\n      throw new Error(`No reviews `);\n    }\n  }\n}\n","import styled from '@emotion/styled';\nexport const ReviewsContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  padding: 10px;\n`;\n\nexport const ReviewAuthor = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 16px;\n  color: #333333;\n`;\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport getReviewsAPI from 'services/getReviews';\nimport { useParams } from 'react-router-dom';\nimport Error from 'components/Error/Error';\nimport {\n  ReviewContent,\n  ReviewList,\n  ReviewItem,\n  ReviewsContainer,\n  ReviewAuthor,\n} from './Reviews.Styled';\nconst Reviews = props => {\n  const { movieId } = useParams();\n  const apiService = useMemo(() => new getReviewsAPI(), []);\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchReviews = useCallback(async () => {\n    setError(false);\n    try {\n      const response = await apiService.getReviews(movieId);\n      setReviews(response.results.results);\n    } catch (error) {\n      setError(error);\n    }\n  }, [apiService, movieId]);\n\n  useEffect(() => {\n    if (!reviews.length) {\n      fetchReviews();\n    }\n  }, [fetchReviews, reviews.length]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 && !error ? (\n        <ReviewList>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <ReviewAuthor>{review.author}</ReviewAuthor>\n              <ReviewContent>{review.content}</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <Error>We don't have any reviews for this movie</Error>\n      )}\n    </ReviewsContainer>\n  );\n};\nexport default Reviews;\n"],"names":["children","getReviewsAPI","options","method","headers","accept","Authorization","id","axios","this","response","results","data","Error","ReviewsContainer","styled","ReviewList","ReviewItem","ReviewAuthor","ReviewContent","props","movieId","useParams","apiService","useMemo","useState","reviews","setReviews","error","setError","fetchReviews","useCallback","getReviews","useEffect","length","map","review","author","content"],"sourceRoot":""}